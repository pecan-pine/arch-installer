#!/bin/bash

# try a command. If it works, do $2, else do $3
function try {
	$1 > /dev/null
	#if [[ $? -eq 0 ]]; then $2; else $3; fi;
}

# ask yes/continue no/continue or quit
# default returns 0 if yes, or 1 if no
# USAGE: ask 1$message 2$default
function ask {
	while true; do
		# if a message was given, print it
		if [[ $1 != "" ]]; then echo $1; fi;
		# if a default was specified, take note
		if [[ $2 = "" ]]; then default="y"; else default="$2"; fi;
		# read input from the user
		read -p "(q to quit, enter for yes) [y/n]: " ynq
		# interpret enter as default (which is usually yes)
		if [[ $ynq = "" ]]; then ynq=$default; fi;
		#echo $default
		#echo $ynq
		case $ynq in
			[Yy]*) return 0;;
			[Nn]*) return 1;;
			[Qq]*) echo "quitting installer"; exit 1;;
		esac
	done
}

function wifi-config {
	ask "Would you like to see a list of available wifi?"
	if [[ $? -eq 0 ]]; then nmcli d wifi; fi;
	echo "What is the name of your network?"
	read ssid
	echo "What is the wifi password?"
	read -s pass
	nmcli d wifi "$ssid" password $pass
}

function chroot-wifi-config {
	echo "Configuring wifi for the new installation"
	pacman -S wpa_supplicant networkmanager dhcpcd
	#try nmcli
	#case $? in
	#	1) pacman -S networkmanager;;
	#esac
	#ask "Do you want to turn on the wifi?"
	#case $? in 
	#	0) wifi-config;;
	#	1) echo "You probably already have wifi";;
	#esac
	#systemctl enable NetworkManager.service
}

# de-chroot needs work
function de-chroot {
	(
	echo "de-chrooting..."
	exit)
	ask "Reboot now? (default no)" no
	case $? in
		0) reboot;;
		1) echo "quitting installer..."; exit 1;;
	esac
}

# pick out ansi escape code for color
# USAGE: colorchooser <colorname (lowercase)>
function colorchooser {
	case $1 in
		[Bb]lack)           echo '0;30';;
		[Dd]ark-[Gg]ray)    echo '1;30';;
		[Rr]ed)             echo '0;31';;
		[Gg]reen)           echo '0;32';;
		[Bb]rown)           echo '0;33';;
		[Bb]lue)            echo '0;34';;
		[Pp]urple)          echo '0;35';;
		[Cc]yan)            echo '0;36';; 
		[Ll]ight-[Gg]ray)   echo '0;37';;
		[Ll]ight-[Rr]ed)    echo '1;31';;
		[Ll]ight-[Gg]reen)  echo '1;32';;
		[Yy]ellow)          echo '1;33';;
		[Ll]ight-[Bb]lue)   echo '1;34';;
		[Ll]ight-[Pp]urple) echo '1;35';;
		[Ll]ight-[Cc]yan)   echo '1;36';;
		[Ww]hite)           echo '1;37';;
	esac
}

# change color of text
# USAGE: color "text" <color>
# make sure to use -e when using echo and these colors
# give 3rd option -n to omit newline
# if using 3rd option be sure to give a blank echo afterwards to avoid an awkward % symbol
function color {
	text=$1
	prefix='\033['
	# textcolor tc
	tc="${prefix}$(colorchooser $2)m"
	# no color nc
	nc='\033[0m'
	echo -e $3 "${tc}${text}${nc}"
}

# make a star banner with rainbow colors
function rainbowstars {
	for i in 1 2 3 4
	do
		for c in black dark-gray red green brown blue purple cyan light-gray light-red light-green yellow light-blue light-purple light-cyan white
			do
				color "*" $c -n
			done
	done
	echo 	
}

